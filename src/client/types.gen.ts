// This file is auto-generated by @hey-api/openapi-ts

export type AbilityChangeReadable = {
    version_group: VersionGroupSummaryReadable;
    readonly effect_entries: Array<AbilityChangeEffectTextReadable>;
};

export type AbilityChangeWritable = {
    version_group: VersionGroupSummaryWritable;
};

export type AbilityChangeEffectTextReadable = {
    effect: string;
    language: LanguageSummaryReadable;
};

export type AbilityChangeEffectTextWritable = {
    effect: string;
    language: LanguageSummaryWritable;
};

export type AbilityDetailReadable = {
    readonly id: number;
    name: string;
    is_main_series?: boolean;
    generation: GenerationSummaryReadable;
    readonly names: Array<AbilityNameReadable>;
    readonly effect_entries: Array<AbilityEffectTextReadable>;
    readonly effect_changes: Array<AbilityChangeReadable>;
    readonly flavor_text_entries: Array<AbilityFlavorTextReadable>;
    readonly pokemon: Array<{
        is_hidden: boolean;
        slot: number;
        pokemon: {
            name: string;
            url: string;
        };
    }>;
};

export type AbilityDetailWritable = {
    name: string;
    is_main_series?: boolean;
    generation: GenerationSummaryWritable;
};

export type AbilityEffectTextReadable = {
    effect: string;
    short_effect: string;
    language: LanguageSummaryReadable;
};

export type AbilityEffectTextWritable = {
    effect: string;
    short_effect: string;
    language: LanguageSummaryWritable;
};

export type AbilityFlavorTextReadable = {
    flavor_text: string;
    language: LanguageSummaryReadable;
    version_group: VersionGroupSummaryReadable;
};

export type AbilityFlavorTextWritable = {
    flavor_text: string;
    language: LanguageSummaryWritable;
    version_group: VersionGroupSummaryWritable;
};

export type AbilityNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type AbilityNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type AbilitySummaryReadable = {
    name: string;
    readonly url: string;
};

export type AbilitySummaryWritable = {
    name: string;
};

export type BerryDetailReadable = {
    readonly id: number;
    name: string;
    growth_time: number;
    max_harvest: number;
    natural_gift_power: number;
    size: number;
    smoothness: number;
    soil_dryness: number;
    firmness: BerryFirmnessSummaryReadable;
    readonly flavors: Array<{
        potency: number;
        flavor: {
            /**
             * The name of the flavor
             */
            name?: string;
            /**
             * The URL to get more information about the flavor
             */
            url?: string;
        };
    }>;
    item: ItemSummaryReadable;
    natural_gift_type: TypeSummaryReadable;
};

export type BerryDetailWritable = {
    name: string;
    growth_time: number;
    max_harvest: number;
    natural_gift_power: number;
    size: number;
    smoothness: number;
    soil_dryness: number;
    firmness: BerryFirmnessSummaryWritable;
    item: ItemSummaryWritable;
    natural_gift_type: TypeSummaryWritable;
};

export type BerryFirmnessDetailReadable = {
    readonly id: number;
    name: string;
    readonly berries: Array<BerrySummaryReadable>;
    readonly names: Array<BerryFirmnessNameReadable>;
};

export type BerryFirmnessDetailWritable = {
    name: string;
};

export type BerryFirmnessNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type BerryFirmnessNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type BerryFirmnessSummaryReadable = {
    name: string;
    readonly url: string;
};

export type BerryFirmnessSummaryWritable = {
    name: string;
};

export type BerryFlavorDetailReadable = {
    readonly id: number;
    name: string;
    readonly berries: Array<{
        potency: number;
        berry: {
            /**
             * The name of the berry
             */
            name?: string;
            /**
             * The URL to get more information about the berry
             */
            url?: string;
        };
    }>;
    contest_type: ContestTypeSummaryReadable;
    readonly names: Array<BerryFlavorNameReadable>;
};

export type BerryFlavorDetailWritable = {
    name: string;
    contest_type: ContestTypeSummaryWritable;
};

export type BerryFlavorNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type BerryFlavorNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type BerryFlavorSummaryReadable = {
    name: string;
    readonly url: string;
};

export type BerryFlavorSummaryWritable = {
    name: string;
};

export type BerrySummaryReadable = {
    name: string;
    readonly url: string;
};

export type BerrySummaryWritable = {
    name: string;
};

export type CharacteristicDescriptionReadable = {
    description?: string;
    language: LanguageSummaryReadable;
};

export type CharacteristicDescriptionWritable = {
    description?: string;
    language: LanguageSummaryWritable;
};

export type CharacteristicDetailReadable = {
    readonly id: number;
    gene_modulo: number;
    readonly possible_values: Array<number>;
    highest_stat: StatSummaryReadable;
    readonly descriptions: Array<CharacteristicDescriptionReadable>;
};

export type CharacteristicDetailWritable = {
    gene_modulo: number;
    highest_stat: StatSummaryWritable;
};

export type CharacteristicSummary = {
    readonly url: string;
};

export type ContestEffectDetailReadable = {
    readonly id: number;
    appeal: number;
    jam: number;
    readonly effect_entries: Array<ContestEffectEffectTextReadable>;
    readonly flavor_text_entries: Array<ContestEffectFlavorTextReadable>;
};

export type ContestEffectDetailWritable = {
    appeal: number;
    jam: number;
};

export type ContestEffectEffectTextReadable = {
    effect: string;
    language: LanguageSummaryReadable;
};

export type ContestEffectEffectTextWritable = {
    effect: string;
    language: LanguageSummaryWritable;
};

export type ContestEffectFlavorTextReadable = {
    flavor_text: string;
    language: LanguageSummaryReadable;
};

export type ContestEffectFlavorTextWritable = {
    flavor_text: string;
    language: LanguageSummaryWritable;
};

export type ContestEffectSummary = {
    readonly url: string;
};

export type ContestTypeDetailReadable = {
    readonly id: number;
    name: string;
    berry_flavor: BerryFlavorSummaryReadable;
    readonly names: Array<ContestTypeNameReadable>;
};

export type ContestTypeDetailWritable = {
    name: string;
    berry_flavor: BerryFlavorSummaryWritable;
};

export type ContestTypeNameReadable = {
    name: string;
    color: string;
    language: LanguageSummaryReadable;
};

export type ContestTypeNameWritable = {
    name: string;
    color: string;
    language: LanguageSummaryWritable;
};

export type ContestTypeSummaryReadable = {
    name: string;
    readonly url: string;
};

export type ContestTypeSummaryWritable = {
    name: string;
};

export type EggGroupDetailReadable = {
    readonly id: number;
    name: string;
    readonly names: Array<EggGroupNameReadable>;
    readonly pokemon_species: Array<{
        /**
         * Pokemon species name.
         */
        name?: string;
        /**
         * The URL to get more information about the species
         */
        url?: string;
    }>;
};

export type EggGroupDetailWritable = {
    name: string;
};

export type EggGroupNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type EggGroupNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type EggGroupSummaryReadable = {
    name: string;
    readonly url: string;
};

export type EggGroupSummaryWritable = {
    name: string;
};

export type EncounterConditionDetailReadable = {
    readonly id: number;
    name: string;
    readonly values: Array<EncounterConditionValueSummaryReadable>;
    readonly names: Array<EncounterConditionNameReadable>;
};

export type EncounterConditionDetailWritable = {
    name: string;
};

export type EncounterConditionNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type EncounterConditionNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type EncounterConditionSummaryReadable = {
    name: string;
    readonly url: string;
};

export type EncounterConditionSummaryWritable = {
    name: string;
};

export type EncounterConditionValueDetailReadable = {
    readonly id: number;
    name: string;
    condition: EncounterConditionSummaryReadable;
    readonly names: Array<EncounterConditionValueNameReadable>;
};

export type EncounterConditionValueDetailWritable = {
    name: string;
    condition: EncounterConditionSummaryWritable;
};

export type EncounterConditionValueNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type EncounterConditionValueNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type EncounterConditionValueSummaryReadable = {
    name: string;
    readonly url: string;
};

export type EncounterConditionValueSummaryWritable = {
    name: string;
};

export type EncounterMethodDetailReadable = {
    readonly id: number;
    name: string;
    order?: number | null;
    readonly names: Array<EncounterMethodNameReadable>;
};

export type EncounterMethodDetailWritable = {
    name: string;
    order?: number | null;
};

export type EncounterMethodNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type EncounterMethodNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type EncounterMethodSummaryReadable = {
    name: string;
    readonly url: string;
};

export type EncounterMethodSummaryWritable = {
    name: string;
};

export type EvolutionChainDetailReadable = {
    readonly id: number;
    baby_trigger_item: ItemSummaryReadable;
    readonly chain: {
        evolution_details: Array<unknown>;
        evolves_to: Array<{
            evolution_details: Array<{
                gender: {
                    name: string;
                    url: string;
                };
                held_item: {
                    name: string;
                    url: string;
                };
                item: {
                    name: string;
                    url: string;
                };
                known_move: unknown;
                known_move_type: unknown;
                location: {
                    name: string;
                    url: string;
                };
                min_affection: number;
                min_beauty: number;
                min_happiness: number;
                min_level: number;
                needs_overworld_rain: boolean;
                party_species: string;
                party_type: string;
                relative_physical_stats: string;
                time_of_day: string;
                trade_species: string;
                trigger: {
                    name: string;
                    url: string;
                };
                turn_upside_down: boolean;
            }>;
            is_baby: boolean;
            species: {
                name: string;
                url: string;
            };
        }>;
        is_baby: boolean;
        species: {
            name: string;
            url: string;
        };
    };
};

export type EvolutionChainDetailWritable = {
    baby_trigger_item: ItemSummaryWritable;
};

export type EvolutionChainSummary = {
    readonly url: string;
};

export type EvolutionTriggerDetailReadable = {
    readonly id: number;
    name: string;
    readonly names: Array<EvolutionTriggerNameReadable>;
    readonly pokemon_species: Array<{
        name: string;
        url: string;
    }>;
};

export type EvolutionTriggerDetailWritable = {
    name: string;
};

export type EvolutionTriggerNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type EvolutionTriggerNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type EvolutionTriggerSummaryReadable = {
    name: string;
    readonly url: string;
};

export type EvolutionTriggerSummaryWritable = {
    name: string;
};

export type Experience = {
    level: number;
    experience: number;
};

export type GenderDetailReadable = {
    readonly id: number;
    name: string;
    readonly pokemon_species_details: Array<{
        rate: number;
        pokemon_species: {
            name: string;
            url: string;
        };
    }>;
    readonly required_for_evolution: Array<{
        name: string;
        url: string;
    }>;
};

export type GenderDetailWritable = {
    name: string;
};

export type GenderSummaryReadable = {
    name: string;
    readonly url: string;
};

export type GenderSummaryWritable = {
    name: string;
};

export type GenerationDetailReadable = {
    readonly id: number;
    name: string;
    readonly abilities: Array<AbilitySummaryReadable>;
    main_region: RegionSummaryReadable;
    readonly moves: Array<MoveSummaryReadable>;
    readonly names: Array<GenerationNameReadable>;
    readonly pokemon_species: Array<PokemonSpeciesSummaryReadable>;
    readonly types: Array<TypeSummaryReadable>;
    readonly version_groups: Array<VersionGroupSummaryReadable>;
};

export type GenerationDetailWritable = {
    name: string;
    main_region: RegionSummaryWritable;
};

export type GenerationNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type GenerationNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type GenerationSummaryReadable = {
    name: string;
    readonly url: string;
};

export type GenerationSummaryWritable = {
    name: string;
};

export type GrowthRateDescriptionReadable = {
    description?: string;
    language: LanguageSummaryReadable;
};

export type GrowthRateDescriptionWritable = {
    description?: string;
    language: LanguageSummaryWritable;
};

export type GrowthRateDetailReadable = {
    readonly id: number;
    name: string;
    formula: string;
    readonly descriptions: Array<GrowthRateDescriptionReadable>;
    readonly levels: Array<Experience>;
    readonly pokemon_species: Array<PokemonSpeciesSummaryReadable>;
};

export type GrowthRateDetailWritable = {
    name: string;
    formula: string;
};

export type GrowthRateSummaryReadable = {
    name: string;
    readonly url: string;
};

export type GrowthRateSummaryWritable = {
    name: string;
};

export type ItemAttributeDescriptionReadable = {
    description?: string;
    language: LanguageSummaryReadable;
};

export type ItemAttributeDescriptionWritable = {
    description?: string;
    language: LanguageSummaryWritable;
};

export type ItemAttributeDetailReadable = {
    readonly id: number;
    name: string;
    readonly descriptions: Array<ItemAttributeDescriptionReadable>;
    readonly items: Array<{
        name: string;
        url: string;
    }>;
    readonly names: Array<ItemAttributeNameReadable>;
};

export type ItemAttributeDetailWritable = {
    name: string;
};

export type ItemAttributeNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type ItemAttributeNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type ItemAttributeSummaryReadable = {
    name: string;
    readonly url: string;
};

export type ItemAttributeSummaryWritable = {
    name: string;
};

export type ItemCategoryDetailReadable = {
    readonly id: number;
    name: string;
    readonly items: Array<ItemSummaryReadable>;
    readonly names: Array<ItemCategoryNameReadable>;
    pocket: ItemPocketSummaryReadable;
};

export type ItemCategoryDetailWritable = {
    name: string;
    pocket: ItemPocketSummaryWritable;
};

export type ItemCategoryNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type ItemCategoryNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type ItemCategorySummaryReadable = {
    name: string;
    readonly url: string;
};

export type ItemCategorySummaryWritable = {
    name: string;
};

export type ItemDetailReadable = {
    readonly id: number;
    name: string;
    cost?: number | null;
    fling_power?: number | null;
    fling_effect: ItemFlingEffectSummaryReadable;
    readonly attributes: Array<{
        name: string;
        url: string;
    }>;
    category: ItemCategorySummaryReadable;
    readonly effect_entries: Array<ItemEffectTextReadable>;
    readonly flavor_text_entries: Array<ItemFlavorTextReadable>;
    readonly game_indices: Array<ItemGameIndexReadable>;
    readonly names: Array<ItemNameReadable>;
    readonly held_by_pokemon: Array<{
        pokemon: {
            name: string;
            url: string;
        };
        'version-details': Array<{
            rarity: number;
            version: {
                name: string;
                url: string;
            };
        }>;
    }>;
    readonly sprites: {
        default: string;
    };
    readonly baby_trigger_for: {
        url: string;
    };
    readonly machines: Array<{
        machine: string;
        version_group: {
            name: string;
            url: string;
        };
    }>;
};

export type ItemDetailWritable = {
    name: string;
    cost?: number | null;
    fling_power?: number | null;
    fling_effect: ItemFlingEffectSummaryWritable;
    category: ItemCategorySummaryWritable;
};

export type ItemEffectTextReadable = {
    effect: string;
    short_effect: string;
    language: LanguageSummaryReadable;
};

export type ItemEffectTextWritable = {
    effect: string;
    short_effect: string;
    language: LanguageSummaryWritable;
};

export type ItemFlavorTextReadable = {
    text: string;
    version_group: VersionGroupSummaryReadable;
    language: LanguageSummaryReadable;
};

export type ItemFlavorTextWritable = {
    text: string;
    version_group: VersionGroupSummaryWritable;
    language: LanguageSummaryWritable;
};

export type ItemFlingEffectDetailReadable = {
    readonly id: number;
    name: string;
    readonly effect_entries: Array<ItemFlingEffectEffectTextReadable>;
    readonly items: Array<ItemSummaryReadable>;
};

export type ItemFlingEffectDetailWritable = {
    name: string;
};

export type ItemFlingEffectEffectTextReadable = {
    effect: string;
    language: LanguageSummaryReadable;
};

export type ItemFlingEffectEffectTextWritable = {
    effect: string;
    language: LanguageSummaryWritable;
};

export type ItemFlingEffectSummaryReadable = {
    name: string;
    readonly url: string;
};

export type ItemFlingEffectSummaryWritable = {
    name: string;
};

export type ItemGameIndexReadable = {
    game_index: number;
    generation: GenerationSummaryReadable;
};

export type ItemGameIndexWritable = {
    game_index: number;
    generation: GenerationSummaryWritable;
};

export type ItemNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type ItemNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type ItemPocketDetailReadable = {
    readonly id: number;
    name: string;
    readonly categories: Array<ItemCategorySummaryReadable>;
    readonly names: Array<ItemPocketNameReadable>;
};

export type ItemPocketDetailWritable = {
    name: string;
};

export type ItemPocketNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type ItemPocketNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type ItemPocketSummaryReadable = {
    name: string;
    readonly url: string;
};

export type ItemPocketSummaryWritable = {
    name: string;
};

export type ItemSummaryReadable = {
    name: string;
    readonly url: string;
};

export type ItemSummaryWritable = {
    name: string;
};

export type LanguageDetailReadable = {
    readonly id: number;
    name: string;
    official?: boolean;
    iso639: string;
    iso3166: string;
    readonly names: Array<LanguageNameReadable>;
};

export type LanguageDetailWritable = {
    name: string;
    official?: boolean;
    iso639: string;
    iso3166: string;
};

export type LanguageNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type LanguageNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type LanguageSummaryReadable = {
    name: string;
    readonly url: string;
};

export type LanguageSummaryWritable = {
    name: string;
};

export type LocationAreaDetailReadable = {
    readonly id: number;
    name: string;
    game_index: number;
    readonly encounter_method_rates: Array<{
        encounter_method: {
            name: string;
            url: string;
        };
        version_details: Array<{
            rate: number;
            version: {
                name: string;
                url: string;
            };
        }>;
    }>;
    location: LocationSummaryReadable;
    readonly names: Array<LocationAreaNameReadable>;
    readonly pokemon_encounters: Array<{
        pokemon: {
            name: string;
            url: string;
        };
        version_details: Array<{
            version: {
                name: string;
                url: string;
            };
            max_chance: number;
            encounter_details: {
                min_level: number;
                max_level: number;
                condition_values?: {
                    name: string;
                    url: string;
                };
                chance: number;
                method: {
                    name: string;
                    url: string;
                };
            };
        }>;
    }>;
};

export type LocationAreaDetailWritable = {
    name: string;
    game_index: number;
    location: LocationSummaryWritable;
};

export type LocationAreaNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type LocationAreaNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type LocationAreaSummaryReadable = {
    name: string;
    readonly url: string;
};

export type LocationAreaSummaryWritable = {
    name: string;
};

export type LocationDetailReadable = {
    readonly id: number;
    name: string;
    region: RegionSummaryReadable;
    readonly names: Array<LocationNameReadable>;
    readonly game_indices: Array<LocationGameIndexReadable>;
    readonly areas: Array<LocationAreaSummaryReadable>;
};

export type LocationDetailWritable = {
    name: string;
    region: RegionSummaryWritable;
};

export type LocationGameIndexReadable = {
    game_index: number;
    generation: GenerationSummaryReadable;
};

export type LocationGameIndexWritable = {
    game_index: number;
    generation: GenerationSummaryWritable;
};

export type LocationNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type LocationNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type LocationSummaryReadable = {
    name: string;
    readonly url: string;
};

export type LocationSummaryWritable = {
    name: string;
};

export type MachineDetailReadable = {
    readonly id: number;
    item: ItemSummaryReadable;
    version_group: VersionGroupSummaryReadable;
    move: MoveSummaryReadable;
};

export type MachineDetailWritable = {
    item: ItemSummaryWritable;
    version_group: VersionGroupSummaryWritable;
    move: MoveSummaryWritable;
};

export type MachineSummary = {
    readonly url: string;
};

export type MoveBattleStyleDetailReadable = {
    readonly id: number;
    name: string;
    readonly names: Array<MoveBattleStyleNameReadable>;
};

export type MoveBattleStyleDetailWritable = {
    name: string;
};

export type MoveBattleStyleNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type MoveBattleStyleNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type MoveBattleStyleSummaryReadable = {
    name: string;
    readonly url: string;
};

export type MoveBattleStyleSummaryWritable = {
    name: string;
};

export type MoveChangeReadable = {
    accuracy?: number | null;
    power?: number | null;
    pp?: number | null;
    effect_chance: number;
    readonly effect_entries: Array<{
        effect: string;
        short_effect: string;
        language: {
            name: string;
            url: string;
        };
    }>;
    type: TypeSummaryReadable;
    version_group: VersionGroupSummaryReadable;
};

export type MoveChangeWritable = {
    accuracy?: number | null;
    power?: number | null;
    pp?: number | null;
    effect_chance: number;
    type: TypeSummaryWritable;
    version_group: VersionGroupSummaryWritable;
};

export type MoveDamageClassDescriptionReadable = {
    description?: string;
    language: LanguageSummaryReadable;
};

export type MoveDamageClassDescriptionWritable = {
    description?: string;
    language: LanguageSummaryWritable;
};

export type MoveDamageClassDetailReadable = {
    readonly id: number;
    name: string;
    readonly descriptions: Array<MoveDamageClassDescriptionReadable>;
    readonly moves: Array<MoveSummaryReadable>;
    readonly names: Array<MoveDamageClassNameReadable>;
};

export type MoveDamageClassDetailWritable = {
    name: string;
};

export type MoveDamageClassNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type MoveDamageClassNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type MoveDamageClassSummaryReadable = {
    name: string;
    readonly url: string;
};

export type MoveDamageClassSummaryWritable = {
    name: string;
};

export type MoveDetailReadable = {
    readonly id: number;
    name: string;
    accuracy?: number | null;
    effect_chance: number;
    pp?: number | null;
    priority?: number | null;
    power?: number | null;
    readonly contest_combos: {
        normal: {
            use_before: Array<{
                name: string;
                url: string;
            }>;
            use_after: Array<{
                name: string;
                url: string;
            }>;
        };
        super: {
            use_before: Array<{
                name: string;
                url: string;
            }>;
            use_after: Array<{
                name: string;
                url: string;
            }>;
        };
    };
    contest_type: ContestTypeSummaryReadable;
    contest_effect: ContestEffectSummary;
    damage_class: MoveDamageClassSummaryReadable;
    readonly effect_entries: Array<{
        effect: string;
        short_effect: string;
        language: {
            name: string;
            url: string;
        };
    }>;
    readonly effect_changes: Array<{
        effect_entries: Array<{
            effect: string;
            language: {
                name: string;
                url: string;
            };
        }>;
        version_group: {
            name: string;
            url: string;
        };
    }>;
    generation: GenerationSummaryReadable;
    meta: MoveMetaReadable;
    readonly names: Array<MoveNameReadable>;
    readonly past_values: Array<MoveChangeReadable>;
    readonly stat_changes: Array<{
        change: number;
        stat: {
            name: string;
            url: string;
        };
    }>;
    super_contest_effect: SuperContestEffectSummary;
    target: MoveTargetSummaryReadable;
    type: TypeSummaryReadable;
    readonly machines: Array<{
        machine: {
            url: string;
        };
        version_group: {
            name: string;
            url: string;
        };
    }>;
    readonly flavor_text_entries: Array<MoveFlavorTextReadable>;
    readonly learned_by_pokemon: Array<{
        name: string;
        url: string;
    }>;
};

export type MoveDetailWritable = {
    name: string;
    accuracy?: number | null;
    effect_chance: number;
    pp?: number | null;
    priority?: number | null;
    power?: number | null;
    contest_type: ContestTypeSummaryWritable;
    damage_class: MoveDamageClassSummaryWritable;
    generation: GenerationSummaryWritable;
    meta: MoveMetaWritable;
    target: MoveTargetSummaryWritable;
    type: TypeSummaryWritable;
};

export type MoveFlavorTextReadable = {
    flavor_text: string;
    language: LanguageSummaryReadable;
    version_group: VersionGroupSummaryReadable;
};

export type MoveFlavorTextWritable = {
    flavor_text: string;
    language: LanguageSummaryWritable;
    version_group: VersionGroupSummaryWritable;
};

export type MoveLearnMethodDescriptionReadable = {
    description?: string;
    language: LanguageSummaryReadable;
};

export type MoveLearnMethodDescriptionWritable = {
    description?: string;
    language: LanguageSummaryWritable;
};

export type MoveLearnMethodDetailReadable = {
    readonly id: number;
    name: string;
    readonly names: Array<MoveLearnMethodNameReadable>;
    readonly descriptions: Array<MoveLearnMethodDescriptionReadable>;
    readonly version_groups: Array<{
        name: string;
        url: string;
    }>;
};

export type MoveLearnMethodDetailWritable = {
    name: string;
};

export type MoveLearnMethodNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type MoveLearnMethodNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type MoveLearnMethodSummaryReadable = {
    name: string;
    readonly url: string;
};

export type MoveLearnMethodSummaryWritable = {
    name: string;
};

export type MoveMetaReadable = {
    ailment: MoveMetaAilmentSummaryReadable;
    category: MoveMetaCategorySummaryReadable;
    min_hits?: number | null;
    max_hits?: number | null;
    min_turns?: number | null;
    max_turns?: number | null;
    drain?: number | null;
    healing?: number | null;
    crit_rate?: number | null;
    ailment_chance?: number | null;
    flinch_chance?: number | null;
    stat_chance?: number | null;
};

export type MoveMetaWritable = {
    ailment: MoveMetaAilmentSummaryWritable;
    category: MoveMetaCategorySummaryWritable;
    min_hits?: number | null;
    max_hits?: number | null;
    min_turns?: number | null;
    max_turns?: number | null;
    drain?: number | null;
    healing?: number | null;
    crit_rate?: number | null;
    ailment_chance?: number | null;
    flinch_chance?: number | null;
    stat_chance?: number | null;
};

export type MoveMetaAilmentDetailReadable = {
    readonly id: number;
    name: string;
    readonly moves: Array<{
        name: string;
        url: string;
    }>;
    readonly names: Array<MoveMetaAilmentNameReadable>;
};

export type MoveMetaAilmentDetailWritable = {
    name: string;
};

export type MoveMetaAilmentNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type MoveMetaAilmentNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type MoveMetaAilmentSummaryReadable = {
    name: string;
    readonly url: string;
};

export type MoveMetaAilmentSummaryWritable = {
    name: string;
};

export type MoveMetaCategoryDescriptionReadable = {
    description?: string;
    language: LanguageSummaryReadable;
};

export type MoveMetaCategoryDescriptionWritable = {
    description?: string;
    language: LanguageSummaryWritable;
};

export type MoveMetaCategoryDetailReadable = {
    readonly id: number;
    name: string;
    readonly descriptions: Array<MoveMetaCategoryDescriptionReadable>;
    readonly moves: Array<{
        name: string;
        url: string;
    }>;
};

export type MoveMetaCategoryDetailWritable = {
    name: string;
};

export type MoveMetaCategorySummaryReadable = {
    name: string;
    readonly url: string;
};

export type MoveMetaCategorySummaryWritable = {
    name: string;
};

export type MoveNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type MoveNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type MoveSummaryReadable = {
    name: string;
    readonly url: string;
};

export type MoveSummaryWritable = {
    name: string;
};

export type MoveTargetDescriptionReadable = {
    description?: string;
    language: LanguageSummaryReadable;
};

export type MoveTargetDescriptionWritable = {
    description?: string;
    language: LanguageSummaryWritable;
};

export type MoveTargetDetailReadable = {
    readonly id: number;
    name: string;
    readonly descriptions: Array<MoveTargetDescriptionReadable>;
    readonly moves: Array<MoveSummaryReadable>;
    readonly names: Array<MoveTargetNameReadable>;
};

export type MoveTargetDetailWritable = {
    name: string;
};

export type MoveTargetNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type MoveTargetNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type MoveTargetSummaryReadable = {
    name: string;
    readonly url: string;
};

export type MoveTargetSummaryWritable = {
    name: string;
};

export type NatureBattleStylePreferenceReadable = {
    low_hp_preference: number;
    high_hp_preference: number;
    move_battle_style: MoveBattleStyleSummaryReadable;
};

export type NatureBattleStylePreferenceWritable = {
    low_hp_preference: number;
    high_hp_preference: number;
    move_battle_style: MoveBattleStyleSummaryWritable;
};

export type NatureDetailReadable = {
    readonly id: number;
    name: string;
    decreased_stat: StatSummaryReadable;
    increased_stat: StatSummaryReadable;
    likes_flavor: BerryFlavorSummaryReadable;
    hates_flavor: BerryFlavorSummaryReadable;
    readonly berries: Array<BerrySummaryReadable>;
    readonly pokeathlon_stat_changes: Array<{
        max_change: number;
        pokeathlon_stat: {
            name: string;
            url: string;
        };
    }>;
    readonly move_battle_style_preferences: Array<NatureBattleStylePreferenceReadable>;
    readonly names: Array<NatureNameReadable>;
};

export type NatureDetailWritable = {
    name: string;
    decreased_stat: StatSummaryWritable;
    increased_stat: StatSummaryWritable;
    likes_flavor: BerryFlavorSummaryWritable;
    hates_flavor: BerryFlavorSummaryWritable;
};

export type NatureNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type NatureNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type NatureSummaryReadable = {
    name: string;
    readonly url: string;
};

export type NatureSummaryWritable = {
    name: string;
};

export type PaginatedAbilitySummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<AbilitySummaryReadable>;
};

export type PaginatedAbilitySummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<AbilitySummaryWritable>;
};

export type PaginatedBerryFirmnessSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<BerryFirmnessSummaryReadable>;
};

export type PaginatedBerryFirmnessSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<BerryFirmnessSummaryWritable>;
};

export type PaginatedBerryFlavorSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<BerryFlavorSummaryReadable>;
};

export type PaginatedBerryFlavorSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<BerryFlavorSummaryWritable>;
};

export type PaginatedBerrySummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<BerrySummaryReadable>;
};

export type PaginatedBerrySummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<BerrySummaryWritable>;
};

export type PaginatedCharacteristicSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<CharacteristicSummary>;
};

export type PaginatedCharacteristicSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
};

export type PaginatedContestEffectSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<ContestEffectSummary>;
};

export type PaginatedContestEffectSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
};

export type PaginatedContestTypeSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<ContestTypeSummaryReadable>;
};

export type PaginatedContestTypeSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<ContestTypeSummaryWritable>;
};

export type PaginatedEggGroupSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<EggGroupSummaryReadable>;
};

export type PaginatedEggGroupSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<EggGroupSummaryWritable>;
};

export type PaginatedEncounterConditionSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<EncounterConditionSummaryReadable>;
};

export type PaginatedEncounterConditionSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<EncounterConditionSummaryWritable>;
};

export type PaginatedEncounterConditionValueSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<EncounterConditionValueSummaryReadable>;
};

export type PaginatedEncounterConditionValueSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<EncounterConditionValueSummaryWritable>;
};

export type PaginatedEncounterMethodSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<EncounterMethodSummaryReadable>;
};

export type PaginatedEncounterMethodSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<EncounterMethodSummaryWritable>;
};

export type PaginatedEvolutionChainSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<EvolutionChainSummary>;
};

export type PaginatedEvolutionChainSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
};

export type PaginatedEvolutionTriggerSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<EvolutionTriggerSummaryReadable>;
};

export type PaginatedEvolutionTriggerSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<EvolutionTriggerSummaryWritable>;
};

export type PaginatedGenderSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<GenderSummaryReadable>;
};

export type PaginatedGenderSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<GenderSummaryWritable>;
};

export type PaginatedGenerationSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<GenerationSummaryReadable>;
};

export type PaginatedGenerationSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<GenerationSummaryWritable>;
};

export type PaginatedGrowthRateSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<GrowthRateSummaryReadable>;
};

export type PaginatedGrowthRateSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<GrowthRateSummaryWritable>;
};

export type PaginatedItemAttributeSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<ItemAttributeSummaryReadable>;
};

export type PaginatedItemAttributeSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<ItemAttributeSummaryWritable>;
};

export type PaginatedItemCategorySummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<ItemCategorySummaryReadable>;
};

export type PaginatedItemCategorySummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<ItemCategorySummaryWritable>;
};

export type PaginatedItemFlingEffectSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<ItemFlingEffectSummaryReadable>;
};

export type PaginatedItemFlingEffectSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<ItemFlingEffectSummaryWritable>;
};

export type PaginatedItemPocketSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<ItemPocketSummaryReadable>;
};

export type PaginatedItemPocketSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<ItemPocketSummaryWritable>;
};

export type PaginatedItemSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<ItemSummaryReadable>;
};

export type PaginatedItemSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<ItemSummaryWritable>;
};

export type PaginatedLanguageSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<LanguageSummaryReadable>;
};

export type PaginatedLanguageSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<LanguageSummaryWritable>;
};

export type PaginatedLocationAreaSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<LocationAreaSummaryReadable>;
};

export type PaginatedLocationAreaSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<LocationAreaSummaryWritable>;
};

export type PaginatedLocationSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<LocationSummaryReadable>;
};

export type PaginatedLocationSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<LocationSummaryWritable>;
};

export type PaginatedMachineSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<MachineSummary>;
};

export type PaginatedMachineSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
};

export type PaginatedMoveBattleStyleSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<MoveBattleStyleSummaryReadable>;
};

export type PaginatedMoveBattleStyleSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<MoveBattleStyleSummaryWritable>;
};

export type PaginatedMoveDamageClassSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<MoveDamageClassSummaryReadable>;
};

export type PaginatedMoveDamageClassSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<MoveDamageClassSummaryWritable>;
};

export type PaginatedMoveLearnMethodSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<MoveLearnMethodSummaryReadable>;
};

export type PaginatedMoveLearnMethodSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<MoveLearnMethodSummaryWritable>;
};

export type PaginatedMoveMetaAilmentSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<MoveMetaAilmentSummaryReadable>;
};

export type PaginatedMoveMetaAilmentSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<MoveMetaAilmentSummaryWritable>;
};

export type PaginatedMoveMetaCategorySummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<MoveMetaCategorySummaryReadable>;
};

export type PaginatedMoveMetaCategorySummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<MoveMetaCategorySummaryWritable>;
};

export type PaginatedMoveSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<MoveSummaryReadable>;
};

export type PaginatedMoveSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<MoveSummaryWritable>;
};

export type PaginatedMoveTargetSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<MoveTargetSummaryReadable>;
};

export type PaginatedMoveTargetSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<MoveTargetSummaryWritable>;
};

export type PaginatedNatureSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<NatureSummaryReadable>;
};

export type PaginatedNatureSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<NatureSummaryWritable>;
};

export type PaginatedPalParkAreaSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<PalParkAreaSummaryReadable>;
};

export type PaginatedPalParkAreaSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<PalParkAreaSummaryWritable>;
};

export type PaginatedPokeathlonStatSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<PokeathlonStatSummaryReadable>;
};

export type PaginatedPokeathlonStatSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<PokeathlonStatSummaryWritable>;
};

export type PaginatedPokedexSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<PokedexSummaryReadable>;
};

export type PaginatedPokedexSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<PokedexSummaryWritable>;
};

export type PaginatedPokemonColorSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<PokemonColorSummaryReadable>;
};

export type PaginatedPokemonColorSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<PokemonColorSummaryWritable>;
};

export type PaginatedPokemonFormSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<PokemonFormSummaryReadable>;
};

export type PaginatedPokemonFormSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<PokemonFormSummaryWritable>;
};

export type PaginatedPokemonHabitatSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<PokemonHabitatSummaryReadable>;
};

export type PaginatedPokemonHabitatSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<PokemonHabitatSummaryWritable>;
};

export type PaginatedPokemonShapeSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<PokemonShapeSummaryReadable>;
};

export type PaginatedPokemonShapeSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<PokemonShapeSummaryWritable>;
};

export type PaginatedPokemonSpeciesSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<PokemonSpeciesSummaryReadable>;
};

export type PaginatedPokemonSpeciesSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<PokemonSpeciesSummaryWritable>;
};

export type PaginatedPokemonSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<PokemonSummaryReadable>;
};

export type PaginatedPokemonSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<PokemonSummaryWritable>;
};

export type PaginatedRegionSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<RegionSummaryReadable>;
};

export type PaginatedRegionSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<RegionSummaryWritable>;
};

export type PaginatedStatSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<StatSummaryReadable>;
};

export type PaginatedStatSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<StatSummaryWritable>;
};

export type PaginatedSuperContestEffectSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<SuperContestEffectSummary>;
};

export type PaginatedSuperContestEffectSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
};

export type PaginatedTypeSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<TypeSummaryReadable>;
};

export type PaginatedTypeSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<TypeSummaryWritable>;
};

export type PaginatedVersionGroupSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<VersionGroupSummaryReadable>;
};

export type PaginatedVersionGroupSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<VersionGroupSummaryWritable>;
};

export type PaginatedVersionSummaryListReadable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<VersionSummaryReadable>;
};

export type PaginatedVersionSummaryListWritable = {
    count?: number;
    next?: string;
    previous?: string;
    results?: Array<VersionSummaryWritable>;
};

export type PalParkAreaDetailReadable = {
    readonly id: number;
    name: string;
    readonly names: Array<PalParkAreaNameReadable>;
    readonly pokemon_encounters: Array<{
        base_score: number;
        'pokemon-species': {
            name: string;
            url: string;
        };
        rate: number;
    }>;
};

export type PalParkAreaDetailWritable = {
    name: string;
};

export type PalParkAreaNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type PalParkAreaNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type PalParkAreaSummaryReadable = {
    name: string;
    readonly url: string;
};

export type PalParkAreaSummaryWritable = {
    name: string;
};

export type PokeathlonStatDetailReadable = {
    readonly id: number;
    name: string;
    readonly affecting_natures: {
        decrease: Array<{
            max_change: number;
            nature: {
                name: string;
                url: string;
            };
        }>;
        increase: Array<{
            max_change: number;
            nature: {
                name: string;
                url: string;
            };
        }>;
    };
    readonly names: Array<PokeathlonStatNameReadable>;
};

export type PokeathlonStatDetailWritable = {
    name: string;
};

export type PokeathlonStatNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type PokeathlonStatNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type PokeathlonStatSummaryReadable = {
    name: string;
    readonly url: string;
};

export type PokeathlonStatSummaryWritable = {
    name: string;
};

export type PokedexDescriptionReadable = {
    description?: string;
    language: LanguageSummaryReadable;
};

export type PokedexDescriptionWritable = {
    description?: string;
    language: LanguageSummaryWritable;
};

export type PokedexDetailReadable = {
    readonly id: number;
    name: string;
    is_main_series?: boolean;
    readonly descriptions: Array<PokedexDescriptionReadable>;
    readonly names: Array<PokedexNameReadable>;
    readonly pokemon_entries: Array<{
        entry_number: number;
        pokemon_species: {
            name: string;
            url: string;
        };
    }>;
    region: RegionSummaryReadable;
    readonly version_groups: Array<{
        name: string;
        url: string;
    }>;
};

export type PokedexDetailWritable = {
    name: string;
    is_main_series?: boolean;
    region: RegionSummaryWritable;
};

export type PokedexNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type PokedexNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type PokedexSummaryReadable = {
    name: string;
    readonly url: string;
};

export type PokedexSummaryWritable = {
    name: string;
};

export type PokemonColorDetailReadable = {
    readonly id: number;
    name: string;
    readonly names: Array<PokemonColorNameReadable>;
    readonly pokemon_species: Array<PokemonSpeciesSummaryReadable>;
};

export type PokemonColorDetailWritable = {
    name: string;
};

export type PokemonColorNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type PokemonColorNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type PokemonColorSummaryReadable = {
    name: string;
    readonly url: string;
};

export type PokemonColorSummaryWritable = {
    name: string;
};

export type PokemonDetailReadable = {
    readonly id: number;
    name: string;
    base_experience?: number | null;
    height?: number | null;
    is_default?: boolean;
    order?: number | null;
    weight?: number | null;
    readonly abilities: Array<{
        ability: {
            name: string;
            url: string;
        };
        is_hidden: boolean;
        slot: number;
    }>;
    readonly past_abilities: Array<{
        abilities: Array<{
            ability: {
                name: string;
                url: string;
            };
            is_hidden: boolean;
            slot: number;
        }>;
        generation: {
            name: string;
            url: string;
        };
    }>;
    readonly forms: Array<PokemonFormSummaryReadable>;
    readonly game_indices: Array<PokemonGameIndexReadable>;
    readonly held_items: Array<{
        item: {
            name: string;
            url: string;
        };
        version_details: Array<{
            rarity: number;
            version: {
                name: string;
                url: string;
            };
        }>;
    }>;
    readonly location_area_encounters: string;
    readonly moves: Array<{
        move: {
            name: string;
            url: string;
        };
        version_group_details: Array<{
            level_learned_at: number;
            move_learn_method: {
                name: string;
                url: string;
            };
            version_group: {
                name: string;
                url: string;
            };
        }>;
    }>;
    species: PokemonSpeciesSummaryReadable;
    readonly sprites: {
        front_default?: string;
        [key: string]: string | undefined;
    };
    readonly cries: {
        latest: string;
        legacy: string;
    };
    readonly stats: Array<PokemonStatReadable>;
    readonly types: Array<{
        slot: number;
        type: {
            name: string;
            url: string;
        };
    }>;
    readonly past_types: Array<{
        generation: {
            name: string;
            url: string;
        };
        types: Array<{
            slot: number;
            type: {
                name: string;
                url: string;
            };
        }>;
    }>;
};

export type PokemonDetailWritable = {
    name: string;
    base_experience?: number | null;
    height?: number | null;
    is_default?: boolean;
    order?: number | null;
    weight?: number | null;
    species: PokemonSpeciesSummaryWritable;
};

export type PokemonDexEntryReadable = {
    entry_number: number;
    pokedex: PokedexSummaryReadable;
};

export type PokemonDexEntryWritable = {
    entry_number: number;
    pokedex: PokedexSummaryWritable;
};

export type PokemonFormDetailReadable = {
    readonly id: number;
    name: string;
    order?: number | null;
    form_order?: number | null;
    is_default?: boolean;
    is_battle_only?: boolean;
    is_mega?: boolean;
    form_name: string;
    pokemon: PokemonSummaryReadable;
    readonly sprites: {
        default?: string;
        [key: string]: string | undefined;
    };
    version_group: VersionGroupSummaryReadable;
    readonly form_names: Array<{
        language: {
            name: string;
            url: string;
        };
        name: string;
    }>;
    readonly names: Array<{
        language: {
            name: string;
            url: string;
        };
        name: string;
    }>;
    readonly types: Array<{
        slot: number;
        type: {
            name: string;
            url: string;
        };
    }>;
};

export type PokemonFormDetailWritable = {
    name: string;
    order?: number | null;
    form_order?: number | null;
    is_default?: boolean;
    is_battle_only?: boolean;
    is_mega?: boolean;
    form_name: string;
    pokemon: PokemonSummaryWritable;
    version_group: VersionGroupSummaryWritable;
};

export type PokemonFormSummaryReadable = {
    name: string;
    readonly url: string;
};

export type PokemonFormSummaryWritable = {
    name: string;
};

export type PokemonGameIndexReadable = {
    game_index: number;
    version: VersionSummaryReadable;
};

export type PokemonGameIndexWritable = {
    game_index: number;
    version: VersionSummaryWritable;
};

export type PokemonHabitatDetailReadable = {
    readonly id: number;
    name: string;
    readonly names: Array<PokemonHabitatNameReadable>;
    readonly pokemon_species: Array<PokemonSpeciesSummaryReadable>;
};

export type PokemonHabitatDetailWritable = {
    name: string;
};

export type PokemonHabitatNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type PokemonHabitatNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type PokemonHabitatSummaryReadable = {
    name: string;
    readonly url: string;
};

export type PokemonHabitatSummaryWritable = {
    name: string;
};

export type PokemonShapeDetailReadable = {
    readonly id: number;
    name: string;
    readonly awesome_names: Array<{
        awesome_name: string;
        language: {
            name: string;
            url: string;
        };
    }>;
    readonly names: Array<{
        url: string;
        name: string;
    }>;
    readonly pokemon_species: Array<PokemonSpeciesSummaryReadable>;
};

export type PokemonShapeDetailWritable = {
    name: string;
};

export type PokemonShapeSummaryReadable = {
    name: string;
    readonly url: string;
};

export type PokemonShapeSummaryWritable = {
    name: string;
};

export type PokemonSpeciesDescriptionReadable = {
    description?: string;
    language: LanguageSummaryReadable;
};

export type PokemonSpeciesDescriptionWritable = {
    description?: string;
    language: LanguageSummaryWritable;
};

export type PokemonSpeciesDetailReadable = {
    readonly id: number;
    name: string;
    order?: number | null;
    gender_rate?: number | null;
    capture_rate?: number | null;
    base_happiness?: number | null;
    is_baby?: boolean;
    is_legendary?: boolean;
    is_mythical?: boolean;
    hatch_counter?: number | null;
    has_gender_differences?: boolean;
    forms_switchable?: boolean;
    growth_rate: GrowthRateSummaryReadable;
    readonly pokedex_numbers: Array<PokemonDexEntryReadable>;
    readonly egg_groups: Array<{
        name: string;
        url: string;
    }>;
    color: PokemonColorSummaryReadable;
    shape: PokemonShapeSummaryReadable;
    evolves_from_species: PokemonSpeciesSummaryReadable;
    evolution_chain: EvolutionChainSummary;
    habitat: PokemonHabitatSummaryReadable;
    generation: GenerationSummaryReadable;
    readonly names: Array<{
        language: {
            name: string;
            url: string;
        };
        name: string;
    }>;
    readonly pal_park_encounters: Array<{
        area: {
            name: string;
            url: string;
        };
        base_score: number;
        rate: number;
    }>;
    readonly form_descriptions: Array<PokemonSpeciesDescriptionReadable>;
    readonly flavor_text_entries: Array<PokemonSpeciesFlavorTextReadable>;
    readonly genera: Array<{
        genus: string;
        language: {
            name: string;
            url: string;
        };
    }>;
    readonly varieties: Array<{
        is_default: boolean;
        pokemon: {
            name: string;
            url: string;
        };
    }>;
};

export type PokemonSpeciesDetailWritable = {
    name: string;
    order?: number | null;
    gender_rate?: number | null;
    capture_rate?: number | null;
    base_happiness?: number | null;
    is_baby?: boolean;
    is_legendary?: boolean;
    is_mythical?: boolean;
    hatch_counter?: number | null;
    has_gender_differences?: boolean;
    forms_switchable?: boolean;
    growth_rate: GrowthRateSummaryWritable;
    color: PokemonColorSummaryWritable;
    shape: PokemonShapeSummaryWritable;
    evolves_from_species: PokemonSpeciesSummaryWritable;
    habitat: PokemonHabitatSummaryWritable;
    generation: GenerationSummaryWritable;
};

export type PokemonSpeciesFlavorTextReadable = {
    flavor_text: string;
    language: LanguageSummaryReadable;
    version: VersionSummaryReadable;
};

export type PokemonSpeciesFlavorTextWritable = {
    flavor_text: string;
    language: LanguageSummaryWritable;
    version: VersionSummaryWritable;
};

export type PokemonSpeciesSummaryReadable = {
    name: string;
    readonly url: string;
};

export type PokemonSpeciesSummaryWritable = {
    name: string;
};

export type PokemonStatReadable = {
    base_stat: number;
    effort: number;
    stat: StatSummaryReadable;
};

export type PokemonStatWritable = {
    base_stat: number;
    effort: number;
    stat: StatSummaryWritable;
};

export type PokemonSummaryReadable = {
    name: string;
    readonly url: string;
};

export type PokemonSummaryWritable = {
    name: string;
};

export type RegionDetailReadable = {
    readonly id: number;
    name: string;
    readonly locations: Array<LocationSummaryReadable>;
    main_generation: GenerationSummaryReadable;
    readonly names: Array<RegionNameReadable>;
    readonly pokedexes: Array<PokedexSummaryReadable>;
    readonly version_groups: Array<{
        name: string;
        url: string;
    }>;
};

export type RegionDetailWritable = {
    name: string;
    main_generation: GenerationSummaryWritable;
};

export type RegionNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type RegionNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type RegionSummaryReadable = {
    name: string;
    readonly url: string;
};

export type RegionSummaryWritable = {
    name: string;
};

export type StatDetailReadable = {
    readonly id: number;
    name: string;
    game_index: number;
    is_battle_only?: boolean;
    readonly affecting_moves: {
        increase: Array<{
            change: number;
            move: {
                name: string;
                url: string;
            };
        }>;
        decrease: Array<{
            change: number;
            move: {
                name: string;
                url: string;
            };
        }>;
    };
    readonly affecting_natures: {
        increase: Array<{
            name: string;
            url: string;
        }>;
        decrease: Array<{
            name: string;
            url: string;
        }>;
    };
    readonly characteristics: Array<CharacteristicSummary>;
    move_damage_class: MoveDamageClassSummaryReadable;
    readonly names: Array<StatNameReadable>;
};

export type StatDetailWritable = {
    name: string;
    game_index: number;
    is_battle_only?: boolean;
    move_damage_class: MoveDamageClassSummaryWritable;
};

export type StatNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type StatNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type StatSummaryReadable = {
    name: string;
    readonly url: string;
};

export type StatSummaryWritable = {
    name: string;
};

export type SuperContestEffectDetailReadable = {
    readonly id: number;
    appeal: number;
    readonly flavor_text_entries: Array<SuperContestEffectFlavorTextReadable>;
    readonly moves: Array<MoveSummaryReadable>;
};

export type SuperContestEffectDetailWritable = {
    appeal: number;
};

export type SuperContestEffectFlavorTextReadable = {
    flavor_text: string;
    language: LanguageSummaryReadable;
};

export type SuperContestEffectFlavorTextWritable = {
    flavor_text: string;
    language: LanguageSummaryWritable;
};

export type SuperContestEffectSummary = {
    readonly url: string;
};

/**
 * Serializer for the Type resource
 */
export type TypeDetailReadable = {
    readonly id: number;
    name: string;
    readonly damage_relations: {
        no_damage_to: Array<{
            name: string;
            url: string;
        }>;
        half_damage_to: Array<{
            name: string;
            url: string;
        }>;
        double_damage_to: Array<{
            name: string;
            url: string;
        }>;
        no_damage_from: Array<{
            name: string;
            url: string;
        }>;
        half_damage_from: Array<{
            name: string;
            url: string;
        }>;
        double_damage_from: Array<{
            name: string;
            url: string;
        }>;
    };
    readonly past_damage_relations: Array<{
        generation: {
            name: string;
            url: string;
        };
        damage_relations: {
            no_damage_to: Array<{
                name: string;
                url: string;
            }>;
            half_damage_to: Array<{
                name: string;
                url: string;
            }>;
            double_damage_to: Array<{
                name: string;
                url: string;
            }>;
            no_damage_from: Array<{
                name: string;
                url: string;
            }>;
            half_damage_from: Array<{
                name: string;
                url: string;
            }>;
            double_damage_from: Array<{
                name: string;
                url: string;
            }>;
        };
    }>;
    readonly game_indices: Array<TypeGameIndexReadable>;
    generation: GenerationSummaryReadable;
    move_damage_class: MoveDamageClassSummaryReadable;
    readonly names: Array<AbilityNameReadable>;
    readonly pokemon: Array<{
        slot?: number;
        pokemon?: {
            /**
             * The name of the pokemon
             */
            name?: string;
            /**
             * The URL to get more information about the pokemon
             */
            url?: string;
        };
    }>;
    readonly moves: Array<MoveSummaryReadable>;
    readonly sprites: {
        [key: string]: {
            [key: string]: {
                'name-icon'?: string;
            };
        };
    };
};

/**
 * Serializer for the Type resource
 */
export type TypeDetailWritable = {
    name: string;
    generation: GenerationSummaryWritable;
    move_damage_class: MoveDamageClassSummaryWritable;
};

export type TypeGameIndexReadable = {
    game_index: number;
    generation: GenerationSummaryReadable;
};

export type TypeGameIndexWritable = {
    game_index: number;
    generation: GenerationSummaryWritable;
};

export type TypeSummaryReadable = {
    name: string;
    readonly url: string;
};

export type TypeSummaryWritable = {
    name: string;
};

/**
 * Should have a link to Version Group info but the Circular
 * dependency and compilation order fight eachother and I'm
 * not sure how to add anything other than a hyperlink
 */
export type VersionDetailReadable = {
    readonly id: number;
    name: string;
    readonly names: Array<VersionNameReadable>;
    version_group: VersionGroupSummaryReadable;
};

/**
 * Should have a link to Version Group info but the Circular
 * dependency and compilation order fight eachother and I'm
 * not sure how to add anything other than a hyperlink
 */
export type VersionDetailWritable = {
    name: string;
    version_group: VersionGroupSummaryWritable;
};

export type VersionGroupDetailReadable = {
    readonly id: number;
    name: string;
    order?: number | null;
    generation: GenerationSummaryReadable;
    readonly move_learn_methods: Array<{
        name: string;
        url: string;
    }>;
    readonly pokedexes: Array<{
        name: string;
        url: string;
    }>;
    readonly regions: Array<{
        name: string;
        url: string;
    }>;
    readonly versions: Array<VersionSummaryReadable>;
};

export type VersionGroupDetailWritable = {
    name: string;
    order?: number | null;
    generation: GenerationSummaryWritable;
};

export type VersionGroupSummaryReadable = {
    name: string;
    readonly url: string;
};

export type VersionGroupSummaryWritable = {
    name: string;
};

export type VersionNameReadable = {
    name: string;
    language: LanguageSummaryReadable;
};

export type VersionNameWritable = {
    name: string;
    language: LanguageSummaryWritable;
};

export type VersionSummaryReadable = {
    name: string;
    readonly url: string;
};

export type VersionSummaryWritable = {
    name: string;
};

export type ApiV2AbilityListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/ability/';
};

export type ApiV2AbilityListResponses = {
    200: PaginatedAbilitySummaryListReadable;
};

export type ApiV2AbilityListResponse = ApiV2AbilityListResponses[keyof ApiV2AbilityListResponses];

export type ApiV2AbilityRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/ability/{id}/';
};

export type ApiV2AbilityRetrieveResponses = {
    200: AbilityDetailReadable;
};

export type ApiV2AbilityRetrieveResponse = ApiV2AbilityRetrieveResponses[keyof ApiV2AbilityRetrieveResponses];

export type ApiV2BerryListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/berry/';
};

export type ApiV2BerryListResponses = {
    200: PaginatedBerrySummaryListReadable;
};

export type ApiV2BerryListResponse = ApiV2BerryListResponses[keyof ApiV2BerryListResponses];

export type ApiV2BerryRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/berry/{id}/';
};

export type ApiV2BerryRetrieveResponses = {
    200: BerryDetailReadable;
};

export type ApiV2BerryRetrieveResponse = ApiV2BerryRetrieveResponses[keyof ApiV2BerryRetrieveResponses];

export type ApiV2BerryFirmnessListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/berry-firmness/';
};

export type ApiV2BerryFirmnessListResponses = {
    200: PaginatedBerryFirmnessSummaryListReadable;
};

export type ApiV2BerryFirmnessListResponse = ApiV2BerryFirmnessListResponses[keyof ApiV2BerryFirmnessListResponses];

export type ApiV2BerryFirmnessRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/berry-firmness/{id}/';
};

export type ApiV2BerryFirmnessRetrieveResponses = {
    200: BerryFirmnessDetailReadable;
};

export type ApiV2BerryFirmnessRetrieveResponse = ApiV2BerryFirmnessRetrieveResponses[keyof ApiV2BerryFirmnessRetrieveResponses];

export type ApiV2BerryFlavorListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/berry-flavor/';
};

export type ApiV2BerryFlavorListResponses = {
    200: PaginatedBerryFlavorSummaryListReadable;
};

export type ApiV2BerryFlavorListResponse = ApiV2BerryFlavorListResponses[keyof ApiV2BerryFlavorListResponses];

export type ApiV2BerryFlavorRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/berry-flavor/{id}/';
};

export type ApiV2BerryFlavorRetrieveResponses = {
    200: BerryFlavorDetailReadable;
};

export type ApiV2BerryFlavorRetrieveResponse = ApiV2BerryFlavorRetrieveResponses[keyof ApiV2BerryFlavorRetrieveResponses];

export type ApiV2CharacteristicListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/characteristic/';
};

export type ApiV2CharacteristicListResponses = {
    200: PaginatedCharacteristicSummaryListReadable;
};

export type ApiV2CharacteristicListResponse = ApiV2CharacteristicListResponses[keyof ApiV2CharacteristicListResponses];

export type ApiV2CharacteristicRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/characteristic/{id}/';
};

export type ApiV2CharacteristicRetrieveResponses = {
    200: CharacteristicDetailReadable;
};

export type ApiV2CharacteristicRetrieveResponse = ApiV2CharacteristicRetrieveResponses[keyof ApiV2CharacteristicRetrieveResponses];

export type ApiV2ContestTypeListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/contest-type/';
};

export type ApiV2ContestTypeListResponses = {
    200: PaginatedContestTypeSummaryListReadable;
};

export type ApiV2ContestTypeListResponse = ApiV2ContestTypeListResponses[keyof ApiV2ContestTypeListResponses];

export type ApiV2ContestTypeRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/contest-type/{id}/';
};

export type ApiV2ContestTypeRetrieveResponses = {
    200: ContestTypeDetailReadable;
};

export type ApiV2ContestTypeRetrieveResponse = ApiV2ContestTypeRetrieveResponses[keyof ApiV2ContestTypeRetrieveResponses];

export type ApiV2ContestEffectListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/contest-effect/';
};

export type ApiV2ContestEffectListResponses = {
    200: PaginatedContestEffectSummaryListReadable;
};

export type ApiV2ContestEffectListResponse = ApiV2ContestEffectListResponses[keyof ApiV2ContestEffectListResponses];

export type ApiV2ContestEffectRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/contest-effect/{id}/';
};

export type ApiV2ContestEffectRetrieveResponses = {
    200: ContestEffectDetailReadable;
};

export type ApiV2ContestEffectRetrieveResponse = ApiV2ContestEffectRetrieveResponses[keyof ApiV2ContestEffectRetrieveResponses];

export type ApiV2EggGroupListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/egg-group/';
};

export type ApiV2EggGroupListResponses = {
    200: PaginatedEggGroupSummaryListReadable;
};

export type ApiV2EggGroupListResponse = ApiV2EggGroupListResponses[keyof ApiV2EggGroupListResponses];

export type ApiV2EggGroupRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/egg-group/{id}/';
};

export type ApiV2EggGroupRetrieveResponses = {
    200: EggGroupDetailReadable;
};

export type ApiV2EggGroupRetrieveResponse = ApiV2EggGroupRetrieveResponses[keyof ApiV2EggGroupRetrieveResponses];

export type ApiV2EncounterMethodListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/encounter-method/';
};

export type ApiV2EncounterMethodListResponses = {
    200: PaginatedEncounterMethodSummaryListReadable;
};

export type ApiV2EncounterMethodListResponse = ApiV2EncounterMethodListResponses[keyof ApiV2EncounterMethodListResponses];

export type ApiV2EncounterMethodRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/encounter-method/{id}/';
};

export type ApiV2EncounterMethodRetrieveResponses = {
    200: EncounterMethodDetailReadable;
};

export type ApiV2EncounterMethodRetrieveResponse = ApiV2EncounterMethodRetrieveResponses[keyof ApiV2EncounterMethodRetrieveResponses];

export type ApiV2EncounterConditionListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/encounter-condition/';
};

export type ApiV2EncounterConditionListResponses = {
    200: PaginatedEncounterConditionSummaryListReadable;
};

export type ApiV2EncounterConditionListResponse = ApiV2EncounterConditionListResponses[keyof ApiV2EncounterConditionListResponses];

export type ApiV2EncounterConditionRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/encounter-condition/{id}/';
};

export type ApiV2EncounterConditionRetrieveResponses = {
    200: EncounterConditionDetailReadable;
};

export type ApiV2EncounterConditionRetrieveResponse = ApiV2EncounterConditionRetrieveResponses[keyof ApiV2EncounterConditionRetrieveResponses];

export type ApiV2EncounterConditionValueListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/encounter-condition-value/';
};

export type ApiV2EncounterConditionValueListResponses = {
    200: PaginatedEncounterConditionValueSummaryListReadable;
};

export type ApiV2EncounterConditionValueListResponse = ApiV2EncounterConditionValueListResponses[keyof ApiV2EncounterConditionValueListResponses];

export type ApiV2EncounterConditionValueRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/encounter-condition-value/{id}/';
};

export type ApiV2EncounterConditionValueRetrieveResponses = {
    200: EncounterConditionValueDetailReadable;
};

export type ApiV2EncounterConditionValueRetrieveResponse = ApiV2EncounterConditionValueRetrieveResponses[keyof ApiV2EncounterConditionValueRetrieveResponses];

export type ApiV2EvolutionChainListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/evolution-chain/';
};

export type ApiV2EvolutionChainListResponses = {
    200: PaginatedEvolutionChainSummaryListReadable;
};

export type ApiV2EvolutionChainListResponse = ApiV2EvolutionChainListResponses[keyof ApiV2EvolutionChainListResponses];

export type ApiV2EvolutionChainRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/evolution-chain/{id}/';
};

export type ApiV2EvolutionChainRetrieveResponses = {
    200: EvolutionChainDetailReadable;
};

export type ApiV2EvolutionChainRetrieveResponse = ApiV2EvolutionChainRetrieveResponses[keyof ApiV2EvolutionChainRetrieveResponses];

export type ApiV2EvolutionTriggerListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/evolution-trigger/';
};

export type ApiV2EvolutionTriggerListResponses = {
    200: PaginatedEvolutionTriggerSummaryListReadable;
};

export type ApiV2EvolutionTriggerListResponse = ApiV2EvolutionTriggerListResponses[keyof ApiV2EvolutionTriggerListResponses];

export type ApiV2EvolutionTriggerRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/evolution-trigger/{id}/';
};

export type ApiV2EvolutionTriggerRetrieveResponses = {
    200: EvolutionTriggerDetailReadable;
};

export type ApiV2EvolutionTriggerRetrieveResponse = ApiV2EvolutionTriggerRetrieveResponses[keyof ApiV2EvolutionTriggerRetrieveResponses];

export type ApiV2GenerationListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/generation/';
};

export type ApiV2GenerationListResponses = {
    200: PaginatedGenerationSummaryListReadable;
};

export type ApiV2GenerationListResponse = ApiV2GenerationListResponses[keyof ApiV2GenerationListResponses];

export type ApiV2GenerationRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/generation/{id}/';
};

export type ApiV2GenerationRetrieveResponses = {
    200: GenerationDetailReadable;
};

export type ApiV2GenerationRetrieveResponse = ApiV2GenerationRetrieveResponses[keyof ApiV2GenerationRetrieveResponses];

export type ApiV2GenderListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/gender/';
};

export type ApiV2GenderListResponses = {
    200: PaginatedGenderSummaryListReadable;
};

export type ApiV2GenderListResponse = ApiV2GenderListResponses[keyof ApiV2GenderListResponses];

export type ApiV2GenderRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/gender/{id}/';
};

export type ApiV2GenderRetrieveResponses = {
    200: GenderDetailReadable;
};

export type ApiV2GenderRetrieveResponse = ApiV2GenderRetrieveResponses[keyof ApiV2GenderRetrieveResponses];

export type ApiV2GrowthRateListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/growth-rate/';
};

export type ApiV2GrowthRateListResponses = {
    200: PaginatedGrowthRateSummaryListReadable;
};

export type ApiV2GrowthRateListResponse = ApiV2GrowthRateListResponses[keyof ApiV2GrowthRateListResponses];

export type ApiV2GrowthRateRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/growth-rate/{id}/';
};

export type ApiV2GrowthRateRetrieveResponses = {
    200: GrowthRateDetailReadable;
};

export type ApiV2GrowthRateRetrieveResponse = ApiV2GrowthRateRetrieveResponses[keyof ApiV2GrowthRateRetrieveResponses];

export type ApiV2ItemListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/item/';
};

export type ApiV2ItemListResponses = {
    200: PaginatedItemSummaryListReadable;
};

export type ApiV2ItemListResponse = ApiV2ItemListResponses[keyof ApiV2ItemListResponses];

export type ApiV2ItemRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/item/{id}/';
};

export type ApiV2ItemRetrieveResponses = {
    200: ItemDetailReadable;
};

export type ApiV2ItemRetrieveResponse = ApiV2ItemRetrieveResponses[keyof ApiV2ItemRetrieveResponses];

export type ApiV2ItemCategoryListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/item-category/';
};

export type ApiV2ItemCategoryListResponses = {
    200: PaginatedItemCategorySummaryListReadable;
};

export type ApiV2ItemCategoryListResponse = ApiV2ItemCategoryListResponses[keyof ApiV2ItemCategoryListResponses];

export type ApiV2ItemCategoryRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/item-category/{id}/';
};

export type ApiV2ItemCategoryRetrieveResponses = {
    200: ItemCategoryDetailReadable;
};

export type ApiV2ItemCategoryRetrieveResponse = ApiV2ItemCategoryRetrieveResponses[keyof ApiV2ItemCategoryRetrieveResponses];

export type ApiV2ItemAttributeListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/item-attribute/';
};

export type ApiV2ItemAttributeListResponses = {
    200: PaginatedItemAttributeSummaryListReadable;
};

export type ApiV2ItemAttributeListResponse = ApiV2ItemAttributeListResponses[keyof ApiV2ItemAttributeListResponses];

export type ApiV2ItemAttributeRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/item-attribute/{id}/';
};

export type ApiV2ItemAttributeRetrieveResponses = {
    200: ItemAttributeDetailReadable;
};

export type ApiV2ItemAttributeRetrieveResponse = ApiV2ItemAttributeRetrieveResponses[keyof ApiV2ItemAttributeRetrieveResponses];

export type ApiV2ItemFlingEffectListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/item-fling-effect/';
};

export type ApiV2ItemFlingEffectListResponses = {
    200: PaginatedItemFlingEffectSummaryListReadable;
};

export type ApiV2ItemFlingEffectListResponse = ApiV2ItemFlingEffectListResponses[keyof ApiV2ItemFlingEffectListResponses];

export type ApiV2ItemFlingEffectRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/item-fling-effect/{id}/';
};

export type ApiV2ItemFlingEffectRetrieveResponses = {
    200: ItemFlingEffectDetailReadable;
};

export type ApiV2ItemFlingEffectRetrieveResponse = ApiV2ItemFlingEffectRetrieveResponses[keyof ApiV2ItemFlingEffectRetrieveResponses];

export type ApiV2ItemPocketListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/item-pocket/';
};

export type ApiV2ItemPocketListResponses = {
    200: PaginatedItemPocketSummaryListReadable;
};

export type ApiV2ItemPocketListResponse = ApiV2ItemPocketListResponses[keyof ApiV2ItemPocketListResponses];

export type ApiV2ItemPocketRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/item-pocket/{id}/';
};

export type ApiV2ItemPocketRetrieveResponses = {
    200: ItemPocketDetailReadable;
};

export type ApiV2ItemPocketRetrieveResponse = ApiV2ItemPocketRetrieveResponses[keyof ApiV2ItemPocketRetrieveResponses];

export type ApiV2LanguageListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/language/';
};

export type ApiV2LanguageListResponses = {
    200: PaginatedLanguageSummaryListReadable;
};

export type ApiV2LanguageListResponse = ApiV2LanguageListResponses[keyof ApiV2LanguageListResponses];

export type ApiV2LanguageRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/language/{id}/';
};

export type ApiV2LanguageRetrieveResponses = {
    200: LanguageDetailReadable;
};

export type ApiV2LanguageRetrieveResponse = ApiV2LanguageRetrieveResponses[keyof ApiV2LanguageRetrieveResponses];

export type ApiV2LocationListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/location/';
};

export type ApiV2LocationListResponses = {
    200: PaginatedLocationSummaryListReadable;
};

export type ApiV2LocationListResponse = ApiV2LocationListResponses[keyof ApiV2LocationListResponses];

export type ApiV2LocationRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/location/{id}/';
};

export type ApiV2LocationRetrieveResponses = {
    200: LocationDetailReadable;
};

export type ApiV2LocationRetrieveResponse = ApiV2LocationRetrieveResponses[keyof ApiV2LocationRetrieveResponses];

export type ApiV2LocationAreaListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
    };
    url: '/api/v2/location-area/';
};

export type ApiV2LocationAreaListResponses = {
    200: PaginatedLocationAreaSummaryListReadable;
};

export type ApiV2LocationAreaListResponse = ApiV2LocationAreaListResponses[keyof ApiV2LocationAreaListResponses];

export type ApiV2LocationAreaRetrieveData = {
    body?: never;
    path: {
        /**
         * A unique integer value identifying this location area.
         */
        id: number;
    };
    query?: never;
    url: '/api/v2/location-area/{id}/';
};

export type ApiV2LocationAreaRetrieveResponses = {
    200: LocationAreaDetailReadable;
};

export type ApiV2LocationAreaRetrieveResponse = ApiV2LocationAreaRetrieveResponses[keyof ApiV2LocationAreaRetrieveResponses];

export type ApiV2MachineListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/machine/';
};

export type ApiV2MachineListResponses = {
    200: PaginatedMachineSummaryListReadable;
};

export type ApiV2MachineListResponse = ApiV2MachineListResponses[keyof ApiV2MachineListResponses];

export type ApiV2MachineRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/machine/{id}/';
};

export type ApiV2MachineRetrieveResponses = {
    200: MachineDetailReadable;
};

export type ApiV2MachineRetrieveResponse = ApiV2MachineRetrieveResponses[keyof ApiV2MachineRetrieveResponses];

export type ApiV2MoveListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/move/';
};

export type ApiV2MoveListResponses = {
    200: PaginatedMoveSummaryListReadable;
};

export type ApiV2MoveListResponse = ApiV2MoveListResponses[keyof ApiV2MoveListResponses];

export type ApiV2MoveRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/move/{id}/';
};

export type ApiV2MoveRetrieveResponses = {
    200: MoveDetailReadable;
};

export type ApiV2MoveRetrieveResponse = ApiV2MoveRetrieveResponses[keyof ApiV2MoveRetrieveResponses];

export type ApiV2MoveAilmentListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/move-ailment/';
};

export type ApiV2MoveAilmentListResponses = {
    200: PaginatedMoveMetaAilmentSummaryListReadable;
};

export type ApiV2MoveAilmentListResponse = ApiV2MoveAilmentListResponses[keyof ApiV2MoveAilmentListResponses];

export type ApiV2MoveAilmentRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/move-ailment/{id}/';
};

export type ApiV2MoveAilmentRetrieveResponses = {
    200: MoveMetaAilmentDetailReadable;
};

export type ApiV2MoveAilmentRetrieveResponse = ApiV2MoveAilmentRetrieveResponses[keyof ApiV2MoveAilmentRetrieveResponses];

export type ApiV2MoveBattleStyleListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/move-battle-style/';
};

export type ApiV2MoveBattleStyleListResponses = {
    200: PaginatedMoveBattleStyleSummaryListReadable;
};

export type ApiV2MoveBattleStyleListResponse = ApiV2MoveBattleStyleListResponses[keyof ApiV2MoveBattleStyleListResponses];

export type ApiV2MoveBattleStyleRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/move-battle-style/{id}/';
};

export type ApiV2MoveBattleStyleRetrieveResponses = {
    200: MoveBattleStyleDetailReadable;
};

export type ApiV2MoveBattleStyleRetrieveResponse = ApiV2MoveBattleStyleRetrieveResponses[keyof ApiV2MoveBattleStyleRetrieveResponses];

export type ApiV2MoveCategoryListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/move-category/';
};

export type ApiV2MoveCategoryListResponses = {
    200: PaginatedMoveMetaCategorySummaryListReadable;
};

export type ApiV2MoveCategoryListResponse = ApiV2MoveCategoryListResponses[keyof ApiV2MoveCategoryListResponses];

export type ApiV2MoveCategoryRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/move-category/{id}/';
};

export type ApiV2MoveCategoryRetrieveResponses = {
    200: MoveMetaCategoryDetailReadable;
};

export type ApiV2MoveCategoryRetrieveResponse = ApiV2MoveCategoryRetrieveResponses[keyof ApiV2MoveCategoryRetrieveResponses];

export type ApiV2MoveDamageClassListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/move-damage-class/';
};

export type ApiV2MoveDamageClassListResponses = {
    200: PaginatedMoveDamageClassSummaryListReadable;
};

export type ApiV2MoveDamageClassListResponse = ApiV2MoveDamageClassListResponses[keyof ApiV2MoveDamageClassListResponses];

export type ApiV2MoveDamageClassRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/move-damage-class/{id}/';
};

export type ApiV2MoveDamageClassRetrieveResponses = {
    200: MoveDamageClassDetailReadable;
};

export type ApiV2MoveDamageClassRetrieveResponse = ApiV2MoveDamageClassRetrieveResponses[keyof ApiV2MoveDamageClassRetrieveResponses];

export type ApiV2MoveLearnMethodListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/move-learn-method/';
};

export type ApiV2MoveLearnMethodListResponses = {
    200: PaginatedMoveLearnMethodSummaryListReadable;
};

export type ApiV2MoveLearnMethodListResponse = ApiV2MoveLearnMethodListResponses[keyof ApiV2MoveLearnMethodListResponses];

export type ApiV2MoveLearnMethodRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/move-learn-method/{id}/';
};

export type ApiV2MoveLearnMethodRetrieveResponses = {
    200: MoveLearnMethodDetailReadable;
};

export type ApiV2MoveLearnMethodRetrieveResponse = ApiV2MoveLearnMethodRetrieveResponses[keyof ApiV2MoveLearnMethodRetrieveResponses];

export type ApiV2MoveTargetListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/move-target/';
};

export type ApiV2MoveTargetListResponses = {
    200: PaginatedMoveTargetSummaryListReadable;
};

export type ApiV2MoveTargetListResponse = ApiV2MoveTargetListResponses[keyof ApiV2MoveTargetListResponses];

export type ApiV2MoveTargetRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/move-target/{id}/';
};

export type ApiV2MoveTargetRetrieveResponses = {
    200: MoveTargetDetailReadable;
};

export type ApiV2MoveTargetRetrieveResponse = ApiV2MoveTargetRetrieveResponses[keyof ApiV2MoveTargetRetrieveResponses];

export type ApiV2NatureListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/nature/';
};

export type ApiV2NatureListResponses = {
    200: PaginatedNatureSummaryListReadable;
};

export type ApiV2NatureListResponse = ApiV2NatureListResponses[keyof ApiV2NatureListResponses];

export type ApiV2NatureRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/nature/{id}/';
};

export type ApiV2NatureRetrieveResponses = {
    200: NatureDetailReadable;
};

export type ApiV2NatureRetrieveResponse = ApiV2NatureRetrieveResponses[keyof ApiV2NatureRetrieveResponses];

export type ApiV2PalParkAreaListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/pal-park-area/';
};

export type ApiV2PalParkAreaListResponses = {
    200: PaginatedPalParkAreaSummaryListReadable;
};

export type ApiV2PalParkAreaListResponse = ApiV2PalParkAreaListResponses[keyof ApiV2PalParkAreaListResponses];

export type ApiV2PalParkAreaRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/pal-park-area/{id}/';
};

export type ApiV2PalParkAreaRetrieveResponses = {
    200: PalParkAreaDetailReadable;
};

export type ApiV2PalParkAreaRetrieveResponse = ApiV2PalParkAreaRetrieveResponses[keyof ApiV2PalParkAreaRetrieveResponses];

export type ApiV2PokedexListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/pokedex/';
};

export type ApiV2PokedexListResponses = {
    200: PaginatedPokedexSummaryListReadable;
};

export type ApiV2PokedexListResponse = ApiV2PokedexListResponses[keyof ApiV2PokedexListResponses];

export type ApiV2PokedexRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/pokedex/{id}/';
};

export type ApiV2PokedexRetrieveResponses = {
    200: PokedexDetailReadable;
};

export type ApiV2PokedexRetrieveResponse = ApiV2PokedexRetrieveResponses[keyof ApiV2PokedexRetrieveResponses];

export type ApiV2PokemonListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/pokemon/';
};

export type ApiV2PokemonListResponses = {
    200: PaginatedPokemonSummaryListReadable;
};

export type ApiV2PokemonListResponse = ApiV2PokemonListResponses[keyof ApiV2PokemonListResponses];

export type ApiV2PokemonRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/pokemon/{id}/';
};

export type ApiV2PokemonRetrieveResponses = {
    200: PokemonDetailReadable;
};

export type ApiV2PokemonRetrieveResponse = ApiV2PokemonRetrieveResponses[keyof ApiV2PokemonRetrieveResponses];

export type ApiV2PokemonColorListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/pokemon-color/';
};

export type ApiV2PokemonColorListResponses = {
    200: PaginatedPokemonColorSummaryListReadable;
};

export type ApiV2PokemonColorListResponse = ApiV2PokemonColorListResponses[keyof ApiV2PokemonColorListResponses];

export type ApiV2PokemonColorRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/pokemon-color/{id}/';
};

export type ApiV2PokemonColorRetrieveResponses = {
    200: PokemonColorDetailReadable;
};

export type ApiV2PokemonColorRetrieveResponse = ApiV2PokemonColorRetrieveResponses[keyof ApiV2PokemonColorRetrieveResponses];

export type ApiV2PokemonFormListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/pokemon-form/';
};

export type ApiV2PokemonFormListResponses = {
    200: PaginatedPokemonFormSummaryListReadable;
};

export type ApiV2PokemonFormListResponse = ApiV2PokemonFormListResponses[keyof ApiV2PokemonFormListResponses];

export type ApiV2PokemonFormRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/pokemon-form/{id}/';
};

export type ApiV2PokemonFormRetrieveResponses = {
    200: PokemonFormDetailReadable;
};

export type ApiV2PokemonFormRetrieveResponse = ApiV2PokemonFormRetrieveResponses[keyof ApiV2PokemonFormRetrieveResponses];

export type ApiV2PokemonHabitatListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/pokemon-habitat/';
};

export type ApiV2PokemonHabitatListResponses = {
    200: PaginatedPokemonHabitatSummaryListReadable;
};

export type ApiV2PokemonHabitatListResponse = ApiV2PokemonHabitatListResponses[keyof ApiV2PokemonHabitatListResponses];

export type ApiV2PokemonHabitatRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/pokemon-habitat/{id}/';
};

export type ApiV2PokemonHabitatRetrieveResponses = {
    200: PokemonHabitatDetailReadable;
};

export type ApiV2PokemonHabitatRetrieveResponse = ApiV2PokemonHabitatRetrieveResponses[keyof ApiV2PokemonHabitatRetrieveResponses];

export type ApiV2PokemonShapeListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/pokemon-shape/';
};

export type ApiV2PokemonShapeListResponses = {
    200: PaginatedPokemonShapeSummaryListReadable;
};

export type ApiV2PokemonShapeListResponse = ApiV2PokemonShapeListResponses[keyof ApiV2PokemonShapeListResponses];

export type ApiV2PokemonShapeRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/pokemon-shape/{id}/';
};

export type ApiV2PokemonShapeRetrieveResponses = {
    200: PokemonShapeDetailReadable;
};

export type ApiV2PokemonShapeRetrieveResponse = ApiV2PokemonShapeRetrieveResponses[keyof ApiV2PokemonShapeRetrieveResponses];

export type ApiV2PokemonSpeciesListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/pokemon-species/';
};

export type ApiV2PokemonSpeciesListResponses = {
    200: PaginatedPokemonSpeciesSummaryListReadable;
};

export type ApiV2PokemonSpeciesListResponse = ApiV2PokemonSpeciesListResponses[keyof ApiV2PokemonSpeciesListResponses];

export type ApiV2PokemonSpeciesRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/pokemon-species/{id}/';
};

export type ApiV2PokemonSpeciesRetrieveResponses = {
    200: PokemonSpeciesDetailReadable;
};

export type ApiV2PokemonSpeciesRetrieveResponse = ApiV2PokemonSpeciesRetrieveResponses[keyof ApiV2PokemonSpeciesRetrieveResponses];

export type ApiV2PokeathlonStatListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/pokeathlon-stat/';
};

export type ApiV2PokeathlonStatListResponses = {
    200: PaginatedPokeathlonStatSummaryListReadable;
};

export type ApiV2PokeathlonStatListResponse = ApiV2PokeathlonStatListResponses[keyof ApiV2PokeathlonStatListResponses];

export type ApiV2PokeathlonStatRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/pokeathlon-stat/{id}/';
};

export type ApiV2PokeathlonStatRetrieveResponses = {
    200: PokeathlonStatDetailReadable;
};

export type ApiV2PokeathlonStatRetrieveResponse = ApiV2PokeathlonStatRetrieveResponses[keyof ApiV2PokeathlonStatRetrieveResponses];

export type ApiV2RegionListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/region/';
};

export type ApiV2RegionListResponses = {
    200: PaginatedRegionSummaryListReadable;
};

export type ApiV2RegionListResponse = ApiV2RegionListResponses[keyof ApiV2RegionListResponses];

export type ApiV2RegionRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/region/{id}/';
};

export type ApiV2RegionRetrieveResponses = {
    200: RegionDetailReadable;
};

export type ApiV2RegionRetrieveResponse = ApiV2RegionRetrieveResponses[keyof ApiV2RegionRetrieveResponses];

export type ApiV2StatListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/stat/';
};

export type ApiV2StatListResponses = {
    200: PaginatedStatSummaryListReadable;
};

export type ApiV2StatListResponse = ApiV2StatListResponses[keyof ApiV2StatListResponses];

export type ApiV2StatRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/stat/{id}/';
};

export type ApiV2StatRetrieveResponses = {
    200: StatDetailReadable;
};

export type ApiV2StatRetrieveResponse = ApiV2StatRetrieveResponses[keyof ApiV2StatRetrieveResponses];

export type ApiV2SuperContestEffectListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/super-contest-effect/';
};

export type ApiV2SuperContestEffectListResponses = {
    200: PaginatedSuperContestEffectSummaryListReadable;
};

export type ApiV2SuperContestEffectListResponse = ApiV2SuperContestEffectListResponses[keyof ApiV2SuperContestEffectListResponses];

export type ApiV2SuperContestEffectRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/super-contest-effect/{id}/';
};

export type ApiV2SuperContestEffectRetrieveResponses = {
    200: SuperContestEffectDetailReadable;
};

export type ApiV2SuperContestEffectRetrieveResponse = ApiV2SuperContestEffectRetrieveResponses[keyof ApiV2SuperContestEffectRetrieveResponses];

export type ApiV2TypeListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/type/';
};

export type ApiV2TypeListResponses = {
    200: PaginatedTypeSummaryListReadable;
};

export type ApiV2TypeListResponse = ApiV2TypeListResponses[keyof ApiV2TypeListResponses];

export type ApiV2TypeRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/type/{id}/';
};

export type ApiV2TypeRetrieveResponses = {
    200: TypeDetailReadable;
};

export type ApiV2TypeRetrieveResponse = ApiV2TypeRetrieveResponses[keyof ApiV2TypeRetrieveResponses];

export type ApiV2VersionListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/version/';
};

export type ApiV2VersionListResponses = {
    200: PaginatedVersionSummaryListReadable;
};

export type ApiV2VersionListResponse = ApiV2VersionListResponses[keyof ApiV2VersionListResponses];

export type ApiV2VersionRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/version/{id}/';
};

export type ApiV2VersionRetrieveResponses = {
    200: VersionDetailReadable;
};

export type ApiV2VersionRetrieveResponse = ApiV2VersionRetrieveResponses[keyof ApiV2VersionRetrieveResponses];

export type ApiV2VersionGroupListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
        /**
         * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         * Case-insensitive query applied on the `name` property.
         */
        q?: string;
    };
    url: '/api/v2/version-group/';
};

export type ApiV2VersionGroupListResponses = {
    200: PaginatedVersionGroupSummaryListReadable;
};

export type ApiV2VersionGroupListResponse = ApiV2VersionGroupListResponses[keyof ApiV2VersionGroupListResponses];

export type ApiV2VersionGroupRetrieveData = {
    body?: never;
    path: {
        /**
         * This parameter can be a string or an integer.
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/version-group/{id}/';
};

export type ApiV2VersionGroupRetrieveResponses = {
    200: VersionGroupDetailReadable;
};

export type ApiV2VersionGroupRetrieveResponse = ApiV2VersionGroupRetrieveResponses[keyof ApiV2VersionGroupRetrieveResponses];

export type ApiV2PokemonEncountersRetrieveData = {
    body?: never;
    path: {
        pokemon_id: string;
    };
    query?: never;
    url: '/api/v2/pokemon/{pokemon_id}/encounters';
};

export type ApiV2PokemonEncountersRetrieveResponses = {
    200: Array<{
        location_area: {
            name: string;
            url: string;
        };
        version_details: Array<{
            encounter_details: Array<{
                chance: number;
                condition_values: Array<{
                    name: string;
                    url: string;
                }>;
                max_level: number;
                method: {
                    name: string;
                    url: string;
                };
                min_level: number;
            }>;
            max_chance: number;
            version: {
                name: string;
                url: string;
            };
        }>;
    }>;
};

export type ApiV2PokemonEncountersRetrieveResponse = ApiV2PokemonEncountersRetrieveResponses[keyof ApiV2PokemonEncountersRetrieveResponses];

export type ClientOptions = {
    baseUrl: 'https://pokeapi.co' | (string & {});
};